<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--
Copyright 2020 HAWKORE, S.L.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.hawkore.springframework.boot</groupId>
  <artifactId>mule4-spring-boot-starter</artifactId>
  <version>2.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Spring Boot Starter for Mule 4</name>
  <description>A 'Bootiful' approach to run Mule 4 embedded into a Spring Boot application</description>

  <url>https://github.com/hawkore/mule4-spring-boot-starter</url>

  <scm>
    <connection>scm:git:git://github.com/hawkore/mule4-spring-boot-starter.git</connection>
    <developerConnection>scm:git:ssh://github.com:hawkore/mule4-spring-boot-starter.git</developerConnection>
    <url>https://github.com/hawkore/mule4-spring-boot-starter/tree/master</url>
  </scm>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>HAWKORE, S.L.</name>
    <url>https://www.hawkore.com</url>
  </organization>

  <developers>
    <developer>
      <id>manuel.nunez</id>
      <name>Manuel Núñez</name>
      <email>manuel.nunez at hawkore dot com</email>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <gpg.skip>true</gpg.skip>

    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
    <maven-jacoco-plugin.version>0.8.5</maven-jacoco-plugin.version>
    <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
    <maven-sufire-plugin.version>2.12.4</maven-sufire-plugin.version>

    <!-- Default Mule Runtime BOM Version -->
    <mule.bom.version>4.2.2-hf5</mule.bom.version>

    <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
    <license.file>./LICENSE</license.file>
  </properties>

  <modules>
    <module>modules/test-resources</module>
    <module>modules/mule4-spring-boot-container</module>
    <module>modules/mule4-spring-boot-starter-ce</module>
    <module>modules/coverage-report</module>
  </modules>

  <profiles>
    <profile>
      <id>sign</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>auto-release</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.7</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>build-ee</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <modules>
        <module>modules/mule4-spring-boot-starter-ee</module>
      </modules>
    </profile>
    <profile>
      <id>header-license</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>3.0</version>
            <configuration>
              <skip>${skipVerifications}</skip>
              <header>LICENSE_HEADER.txt</header>
              <includes>
                <include>**/*.java</include>
              </includes>
              <mapping>
                <java>SLASHSTAR_STYLE</java>
              </mapping>
            </configuration>
            <executions>
              <execution>
                <id>code-license</id>
                <phase>validate</phase>
                <goals>
                  <goal>format</goal>
                </goals>
                <configuration combine.self="override">
                  <header>LICENSE_HEADER.txt</header>
                  <mapping>
                    <java>SLASHSTAR_STYLE</java>
                  </mapping>
                  <includes>
                    <include>**/*.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
          <flattenMode>defaults</flattenMode>
          <flattenedPomFilename>pom-installed.xml</flattenedPomFilename>
          <updatePomFile>true</updatePomFile>
          <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
          <pomElements>
            <url>resolve</url>
            <name>resolve</name>
            <description>resolve</description>
            <scm>resolve</scm>
            <repositories>keep</repositories>
            <developers>resolve</developers>
            <organization>resolve</organization>
          </pomElements>
        </configuration>
        <executions>
          <execution>
            <id>flatten.after.package</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- ensure proper cleanup -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <excludeDefaultDirectories>false</excludeDefaultDirectories>
          <filesets>
            <fileset>
              <directory>${project.basedir}</directory>
              <includes>
                <include>**/pom-installed*.xml</include>
                <include>**/dependency-reduced-pom.xml</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-sources</phase>
            <configuration>
              <target name="copy license">
                <copy file="${license.file}"
                  tofile="${project.build.directory}/classes/META-INF/${project.artifactId}-LICENSE.txt" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <skip>${skipVerifications}</skip>
          <header>LICENSE_HEADER.txt</header>
          <includes>
            <include>**/*.java</include>
          </includes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven-jacoco-plugin.version}</version>
        <configuration>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>coverage-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>80%</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
