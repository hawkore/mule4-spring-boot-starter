##################################################
# Mule artifacts initialization flags
##################################################
mule.lazyInitializationEnabled=false
mule.xmlValidationsEnabled=true
mule.lazyConnectionsEnabled=true

##################################################
# Spring Boot - Mule Deployment Services
##################################################
# Mule deployment services port
server.port=8880
spring.application.name=sample-mule-runtime
# Enable multipart uploads for deploy mule artifacts
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=0
# Max file size unlimited
spring.servlet.multipart.max-file-size=-1
# Max Request Size unlimited
spring.servlet.multipart.max-request-size=-1

##################################################
# Spring boot admin - Mule Runtime management
##################################################
# Management port, should be different from server.port to be protected by a firewall
management.server.port=8888
# As with Spring Boot 2 most of the endpoints arenâ€™t exposed via http by default,
# we expose all of them. For production you should carefully choose which endpoints to expose.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
# see https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/html/production-ready-monitoring.html
management.server.servlet.context-path=/manage
# Enable management spring actuator global logging file
logging.file=${mule.base}/logs/mule-runtime-embedded.log
# Optional: Use console log pattern (colored) for spring boot admin logging file endpoint
logging.pattern.file=${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%-15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
# spring boot (>=2.2) jmx enabled
spring.jmx.enabled=true

# Optional: The URL of the Spring Boot Admin Server (SBA) to register at whether you use spring-boot-admin-client
# Check spring-boot-admin documentation for another discovery mechanisms
spring.boot.admin.client.url=http://localhost:8882
